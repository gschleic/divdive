{"version":3,"sources":["meteor://ðŸ’»app/imports/api/positions/methods.js","meteor://ðŸ’»app/imports/api/positions/positions.js","meteor://ðŸ’»app/imports/api/positions/publications.js","meteor://ðŸ’»app/imports/api/quotes/cron.js","meteor://ðŸ’»app/imports/api/quotes/methods.js","meteor://ðŸ’»app/imports/api/quotes/publications.js","meteor://ðŸ’»app/imports/api/quotes/quotes.js","meteor://ðŸ’»app/imports/api/stocks/cron.js","meteor://ðŸ’»app/imports/api/stocks/finanalyzer.js","meteor://ðŸ’»app/imports/api/stocks/finscraper.js","meteor://ðŸ’»app/imports/api/stocks/lib.js","meteor://ðŸ’»app/imports/api/stocks/methods.js","meteor://ðŸ’»app/imports/api/stocks/publications.js","meteor://ðŸ’»app/imports/api/stocks/stocks.js","meteor://ðŸ’»app/imports/startup/synced_cron_config.js","meteor://ðŸ’»app/server/main.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["Meteor.methods({\n    'positions.test'() {\n        console.log(\"I am here...\");\n    },\n    'positions.insert'(text) {\n        check(text, String);\n\n        // Make sure the user is logged in before inserting a task\n        if (! this.userId) {\n            throw new Meteor.Error('not-authorized');\n        }\n\n        Positions.insert({\n            text,\n            createdAt: new Date(),\n            owner: this.userId,\n        });\n    },\n    'psotions.remove'(positionId) {\n        check(positionId, String);\n\n        Positions.remove(positionId);\n    },\n\n    'positions.setChecked'(taskId, setChecked) {\n        check(taskId, String);\n        check(setChecked, Boolean);\n\n        Positions.update(taskId, { $set: { checked: setChecked } });\n    },\n});","import { Mongo } from 'meteor/mongo';\n\nexport const Positions = new Mongo.Collection(\"positions\");\n/*\n\n # toBuy\n # buyOrderPlaced\n # bought\n # sellOrderPlaced\n # sold\n # dividendReceived\n # closed\n\n */\n\n","import { Positions } from './positions';\n\n\nif (Meteor.isServer) {\n    // This code only runs on the server\n    Meteor.publish('positions', function stocksPublication() {\n        return Positions.find({owner: this.user});\n    });\n}\n\n","import {Meteor} from 'meteor/meteor';\n\nimport {Stocks} from '../stocks/stocks';\nimport {Quotes} from './quotes';\n\n\nvar moment = require('moment');\nvar cheerio = require('cheerio');\nvar _ = require('underscore');\n\nexport default realtimeQuotes = function () {\n    const S = Stocks.find({symbol: \"T\"}).fetch();\n\n    _.each(S, function (stock) {\n        result = Meteor.http.get('http://www.nasdaq.com/symbol/' + stock.symbol + '/real-time');\n        $ = cheerio.load(result.content);\n        var quote = Number($('#quotes_content_left__LastSale').text());\n        var todays_high = Number($('#quotes_content_left__TodaysHigh').text());\n        var todays_low = Number($('#quotes_content_left__TodaysLow').text());\n        var previous_close = Number($('#quotes_content_left__PreviousClose').text());\n\n        const Q = Quotes.findOne({symbol: stock.symbol});\n\n        if (Q == undefined) {\n            Quotes.insert({\n                symbol: stock.symbol,\n                quote: quote,\n                todays_low: todays_low,\n                todays_high: todays_high,\n                previous_close: previous_close,\n                ts: new Date()\n            });\n        } else {\n\n            Quotes.update({symbol: stock.symbol}, {\n                $set: {\n                    quote: quote,\n                    todays_low: todays_low,\n                    todays_high: todays_high,\n                    previous_close: previous_close,\n                    ts: new Date()\n                }\n            });\n        }\n\n        console.log(\"Real time quote for %s is %d\", stock.symbol, quote);\n\n\n    });\n}\n\n\n\n","\n\n// https://www.google.com/finance/historical?cid=665232&startdate=Jul+13%2C+2015&enddate=Jul+13%2C+2015&num=30&ei=uoeDV8m1EIyXe4yKgIgH\n\nimport {Meteor} from 'meteor/meteor';\n\nimport {Stocks} from '../stocks/stocks';\nimport {Quotes} from './quotes';\n\n\n// var moment = require('moment');\nvar moment = require('moment-business-days');\nvar cheerio = require('cheerio');\nvar _ = require('underscore');\n\nexport default historicalQuote = function (symbol,sdate,edate) {\n\n    const sd = moment(sdate,\"MM/DD/YY\").format(\"MMM+DD%2C+YYYY\");\n    const ed = moment(edate,\"MM/DD/YY\").format(\"MMM+DD%2C+YYYY\");\n\n    // var startdate = \"Jul+13%2C+2015\";\n    //var enddate = \"Jul+14%2C+2015\";\n\n    console.log(\"Quotes from %s to %s\",sd,ed);\n\n    result = Meteor.http.get('https://www.google.com/finance/historical?q='+symbol+'&startdate='+sd+'&enddate='+ed+'&num=30');\n    $ = cheerio.load(result.content);\n\n    var quote = $('.historical_price').find('tr').text();\n    var cells = quote.split('\\n\\n');\n\n    var quotes={};\n\n    cells.forEach(function(cell) {\n        const q = cell.split('\\n');\n        const record = {};\n        record.open = Number(q[1]);\n        record.high = Number(q[2]);\n        record.low = Number(q[3]);\n        record.close = Number(q[4]);\n        record.volume = Number(q[5].replace(/[,]/g,''));  // \"123,456\" --> 123456\n\n        const dateindex = moment(q[0],\"MMM DD, YYYY\").format(\"MM/DD/YY\");\n\n        quotes[dateindex] = record;\n    });\n\n    return quotes;\n}\n\n\n\n","import {Quotes} from './quotes';\n\nif (Meteor.isServer) {\n    // This code only runs on the server\n    Meteor.publish('quotes', function quotesPublication() {\n        return Quotes.find();\n    });\n}\n","import { Mongo } from 'meteor/mongo';\n\nexport const Quotes = new Mongo.Collection(\"quotes\");\n\n\n\n","import {Meteor} from 'meteor/meteor';\nimport {Stocks} from './stocks';\n\nimport './finscraper';\nimport './finanalyzer';\n\nvar FS = FinScraper;\nvar FA = FinAnalyzer;\n\n// var moment = require('moment');\nvar moment = require('moment-business-days');\nvar cheerio = require('cheerio');\nvar _ = require('underscore');\n\n// Find new dividend stocks\nexport default findNewStocks = function (delta) {\n\n    const stocklist = []\n\n    if (delta == undefined) { var delta = 1 };\n\n    const nextday = new moment().businessAdd(delta).format(\"YYYY-MMM-DD\"); // 2016-Jul-04\n    console.log(\"Finding stocks with an ex-dividend gate of \" + nextday);\n\n    result = Meteor.http.get('http://www.nasdaq.com/dividend-stocks/dividend-calendar.aspx?date=' + nextday);\n    $ = cheerio.load(result.content);\n\n    var fields = [];\n    var Table = $('#Table1 tbody').find('tr').each(function (i, elem) {\n        var rec = $(this).find('td').each(function (i, elem) {\n            fields[i] = $(this).text();\n        });\n\n        let sname = String(fields[0]);\n        let S = sname.split(\"(\");\n\n        let reSymbol = RegExp(\"[(]([A-Z.]+)[)]$\");\n        var sym = sname.match(reSymbol);\n\n\n        var X = sym[0].slice(1, -1);   // (CSCO) --> CSCO\n        stocklist.push(X);\n\n        let record = {\n            company: S[0].trim(),\n            symbol: X,\n            status: \"new\",\n            exDivDate: new Date(fields[1]),\n            payDate: new Date(fields[6]),\n            recordDate: new Date(fields[4]),\n            qdivAmt: Number(fields[2]),\n            adivAmt: Number(fields[3]),\n        }\n\n        // check to see if we already have a \"new\" record for this symbol. If so, we can pass...\n        const found = Stocks.find({symbol: X, status: \"new\"}).count()\n\n        if (found == 0) {\n            console.log(\"new dividend for %s\", X);\n            Stocks.insert(record);\n        } else {\n            console.log(\"skipped: %s already in db\", X);\n        }\n\n        return stocklist;\n\n    });\n}\n\nexport default augmentStocks = function () {\n    const S = Stocks.find({status: 'new'}).fetch();\n    \n\n    // LOOP THROUGH RESULTS AND GET INFO\n    \n    _.each(S, function (stock) {\n\n        const stock_info = FS.getStockInfo(stock.symbol);\n        // now lets get dividend history\n        const divHistory = FS.getDividendHistory(stock.symbol);\n\n\n        Stocks.update({_id: stock._id}, {\n            $set: {\n                lastUpdated: new Date(),\n                info: stock_info,\n                div_history: divHistory,\n                status: 'augmented',\n            }\n        });\n\n    });\n\n}\n\n\nexport default analyzeStocks = function () {\n    const S = Stocks.find({status: \"augmented\"}).fetch();\n\n    _.each(S, function (stock) {\n        \n        const analysis = FA.analyze(stock);\n        \n        Stocks.update({_id: stock._id}, {\n            $set: {\n                analysis: analysis\n            }\n        });\n        console.log(\"%s analyzed\",stock.symbol);\n    });\n}\n\n\nexport default monitorStocks = function () {\n    const S = Stocks.find({symbol: \"T\"}).fetch();\n\n    _.each(S, function (stock) {\n        result = Meteor.http.get('http://www.nasdaq.com/symbol/' + stock.symbol + '/real-time');\n        $ = cheerio.load(result.content);\n        var quote = Number($('#quotes_content_left__LastSale').text());\n        var todays_high = Number($('#quotes_content_left__TodaysHigh').text());\n        var todays_low = Number($('#quotes_content_left__TodaysLow').text());\n        var previous_close = Number($('#quotes_content_left__PreviousClose').text());\n        \n        \n        console.log(\"Real time quote for %s is %d\",stock.symbol,quote);\n\n    });\n}","import {Meteor} from 'meteor/meteor';\nvar cheerio = require('cheerio');\nvar _ = require('underscore');\nvar moment = require('moment-business-days');\n\nimport {Stocks} from './stocks';\n\nimport './lib';\n\nexport default FinAnalyzer = {\n\n    analyze: function (stock) {\n\n        // score\n        let score = 0;\n\n        if (stock.info.pct_year_high != undefined) {\n            if (stock.info.pct_year_high > 0.50) score += 1;\n        }\n\n        if (stock.info.beta < 1.0) score += 1;\n        if (stock.info.volume > 3000000) score += 1;\n        if (stock.info.dividend_yield > 0.02) score += 1;\n        if (stock.info.payout_ratio < 0.8) score += 1;\n\n        const analysis = {};\n        analysis.lastAnalyzed = new Date();\n        analysis.score = score;\n\n        return analysis;\n    },\n\n    saveAnalysis: function (symbol) {\n\n        const record = this.getStockInfo(symbol);\n        const div_history = this.getDividendHistory(symbol);\n\n        const result = Stocks.update({symbol: symbol}, {\n            $set: {\n                updatedOn: new Date(),\n                info: record,\n                div_history: div_history,\n                status: 'augmented',\n            }\n        });\n\n        return result;\n    }\n\n}\n","import {Meteor} from 'meteor/meteor';\nvar cheerio = require('cheerio');\nvar _ = require('underscore');\nvar moment = require('moment-business-days');\n\nimport {Stocks} from './stocks';\n\nimport './lib';\n\nexport default convertNumberString = function (numberstring) {\n    // converts numbers appended with M and B to millions, billions...\n    const last_char = numberstring.slice(-1);\n\n    if (last_char == \"M\" || last_char == \"B\") {\n        const number_part = Number(numberstring.substring(0, numberstring.length - 1));\n\n        if (last_char == \"M\") {\n            return number_part * 1000000;\n        } else if (last_char == \"B\") {\n            return number_part * 1000000000;\n        } else {\n            return number_part;\n        }\n    }\n}\n\nexport default FinScraper = {\n\n    getStockInfo: function (symbol) {\n\n        const record = {};\n\n        result = Meteor.http.get('https://www.google.com/finance?q=' + symbol);\n        $ = cheerio.load(result.content);\n\n        record.lastUpdate = new Date();\n        record.source = \"google.finance\";\n        record.price = Number($('span[class=\"pr\"]').text());\n        record.shares = convertNumberString($('td[data-snapfield=\"shares\"]').next().text().replace(/(\\r\\n|\\n|\\r)/gm, \"\"));\n        record.beta = Number($('td[data-snapfield=\"beta\"]').next().text());\n        record.eps = Number($('td[data-snapfield=\"eps\"]').next().text());\n\n\n        const div_and_yield = $('td[data-snapfield=\"latest_dividend-dividend_yield\"]').next().text()\n            .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\n            .split('/');\n\n        record.dividend_last = Number(div_and_yield[0]);\n        record.dividend_yield = Number(div_and_yield[1] / 100);\n        record.market_cap = convertNumberString($('td[data-snapfield=\"market_cap\"]').next().text().replace(/(\\r\\n|\\n|\\r)/gm, \"\"));\n        record.pe_ratio = Number($('td[data-snapfield=\"pe_ratio\"]').next().text());\n        record.inst_own = Number($('td[data-snapfield=\"inst_own\"]').next().text().replace(/(%|\\r\\n|\\n|\\r)/gm, \"\")) / 100;\n\n        const vol_and_avg = $('td[data-snapfield=\"vol_and_avg\"]').next().text()\n            .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\n            .split(\"/\");\n\n        record.volume = (vol_and_avg[0] == undefined ? undefined : convertNumberString(vol_and_avg[0]));\n        record.average_volume = (vol_and_avg[1] == undefined ? undefined : convertNumberString(vol_and_avg[1]));\n\n        const range = $('td[data-snapfield=\"range\"]').next().text()\n            .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\n            .split('-');\n        record.price_low = (range[0] == undefined ? undefined : Number(range[0].trim()));\n        record.price_high = (range[1] == undefined ? undefined : Number(range[1].trim()));\n\n        const range52 = $('td[data-snapfield=\"range_52week\"]').next().text()\n            .replace(/(\\r\\n|\\n|\\r)/gm, \"\")\n            .split('-');\n        record.price_52week_low = (range52[0] == undefined ? undefined : Number(range52[0].trim()))\n        record.price_52week_high = (range52[1] == undefined ? undefined : Number(range52[1].trim()));\n\n\n        record.open = Number($('td[data-snapfield=\"open\"]').next().text());\n        record.payout_ratio = Number(parseFloat((record.dividend_last * 4) / record.eps).toFixed(2));\n\n        record.pct_year_high = Number(parseFloat(record.price / record.price_52week_high).toFixed(3));\n\n        console.log(record);\n\n        return record;\n    },\n\n    getHistoricalQuotes: function (symbol, sdate, edate) {\n\n        const sd = moment(sdate, \"MM/DD/YY\").format(\"MMM+DD%2C+YYYY\");\n        const ed = moment(edate, \"MM/DD/YY\").format(\"MMM+DD%2C+YYYY\");\n\n        // var startdate = \"Jul+13%2C+2015\";\n        //var enddate = \"Jul+14%2C+2015\";\n\n        console.log(\"Quotes from %s to %s\", sd, ed);\n\n        result = Meteor.http.get('https://www.google.com/finance/historical?q=' + symbol + '&startdate=' + sd + '&enddate=' + ed + '&num=30');\n        $ = cheerio.load(result.content);\n\n        var quote = $('.historical_price').find('tr').text();\n        var cells = quote.split('\\n\\n');\n\n        var quotes = {};\n\n        cells.forEach(function (cell) {\n            const q = cell.split('\\n');\n            const record = {};\n            record.open = Number(q[1]);\n            record.high = Number(q[2]);\n            record.low = Number(q[3]);\n            record.close = Number(q[4]);\n            record.volume = Number(q[5].replace(/[,]/g, ''));  // \"123,456\" --> 123456\n\n            const dateindex = moment(q[0], \"MMM DD, YYYY\").format(\"MM/DD/YY\");\n\n            quotes[dateindex] = record;\n        });\n\n        delete quotes['Invalid date'];\n\n        return quotes;\n    },\n\n\n    getDividendHistory: function (symbol) {\n\n        //const sd = moment(sdate,\"MM/DD/YY\").format(\"MMM+DD%2C+YYYY\");\n        //const ed = moment(edate,\"MM/DD/YY\").format(\"MMM+DD%2C+YYYY\");\n\n\n        console.log(\"Dividend history for %s:\", symbol);\n\n        result = Meteor.http.get('http://www.nasdaq.com/symbol/' + symbol + '/dividend-history/');\n        $ = cheerio.load(result.content);\n\n        const dividends = {};\n\n        var quote = $('#quotes_content_left_dividendhistoryGrid').text();\n\n        dividends[0] = {};\n        dividends[0].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_0').text();\n        dividends[0].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_0').text());\n        dividends[0].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_0').text();\n        dividends[0].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_0').text();\n        dividends[0].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_0').text();\n\n        dividends[1] = {};\n        dividends[1].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_1').text();\n        dividends[1].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_1').text());\n        dividends[1].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_1').text();\n        dividends[1].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_1').text();\n        dividends[1].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_1').text();\n\n        dividends[2] = {};\n        dividends[2].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_2').text();\n        dividends[2].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_2').text());\n        dividends[2].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_2').text();\n        dividends[2].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_2').text();\n        dividends[2].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_2').text();\n\n        dividends[3] = {};\n        dividends[3].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_3').text();\n        dividends[3].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_3').text());\n        dividends[3].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_3').text();\n        dividends[3].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_3').text();\n        dividends[3].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_3').text();\n\n        dividends[4] = {};\n        dividends[4].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_4').text();\n        dividends[4].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_4').text());\n        dividends[4].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_4').text();\n        dividends[4].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_4').text();\n        dividends[4].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_4').text();\n\n        dividends[5] = {};\n        dividends[5].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_5').text();\n        dividends[5].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_5').text());\n        dividends[5].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_5').text();\n        dividends[5].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_5').text();\n        dividends[5].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_5').text();\n\n        dividends[6] = {};\n        dividends[6].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_6').text();\n        dividends[6].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_6').text());\n        dividends[6].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_6').text();\n        dividends[6].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_6').text();\n        dividends[6].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_6').text();\n\n        dividends[7] = {};\n        dividends[7].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_7').text();\n        dividends[7].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_7').text());\n        dividends[7].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_7').text();\n        dividends[7].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_7').text();\n        dividends[7].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_7').text();\n\n        dividends[8] = {};\n        dividends[8].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_8').text();\n        dividends[8].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_8').text());\n        dividends[8].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_8').text();\n        dividends[8].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_8').text();\n        dividends[8].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_8').text();\n\n\n        dividends[9] = {};\n        dividends[9].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_9').text();\n        dividends[9].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_9').text());\n        dividends[9].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_9').text();\n        dividends[9].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_9').text();\n        dividends[9].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_9').text();\n\n        return dividends;\n    },\n\n\n    saveStockInfo: function (symbol) {\n\n        const record = this.getStockInfo(symbol);\n        const div_history = this.getDividendHistory(symbol);\n\n        const result = Stocks.update({symbol: symbol}, {\n            $set: {\n                updatedOn: new Date(),\n                info: record,\n                div_history: div_history,\n                status: 'augmented',\n            }\n        });\n\n        return result;\n    }\n\n}\n","import {Meteor} from 'meteor/meteor';\nimport '../quotes/methods.js';\nimport './finscraper';\n\nvar FS = FinScraper;\n\nvar moment = require('moment-business-days');\nvar cheerio = require('cheerio');\nvar _ = require('underscore');\n\nexport default getDividendHistory = function (symbol) {\n\n    //const sd = moment(sdate,\"MM/DD/YY\").format(\"MMM+DD%2C+YYYY\");\n    //const ed = moment(edate,\"MM/DD/YY\").format(\"MMM+DD%2C+YYYY\");\n\n\n    console.log(\"Dividend history for %s:\", symbol);\n\n    result = Meteor.http.get('http://www.nasdaq.com/symbol/' + symbol + '/dividend-history/');\n    $ = cheerio.load(result.content);\n\n    const dividends = {};\n\n    var quote = $('#quotes_content_left_dividendhistoryGrid').text();\n\n    dividends[0] = {};\n    dividends[0].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_0').text();\n    dividends[0].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_0').text());\n    dividends[0].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_0').text();\n    dividends[0].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_0').text();\n    dividends[0].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_0').text();\n\n    dividends[1] = {};\n    dividends[1].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_1').text();\n    dividends[1].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_1').text());\n    dividends[1].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_1').text();\n    dividends[1].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_1').text();\n    dividends[1].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_1').text();\n\n    dividends[2] = {};\n    dividends[2].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_2').text();\n    dividends[2].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_2').text());\n    dividends[2].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_2').text();\n    dividends[2].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_2').text();\n    dividends[2].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_2').text();\n\n    dividends[3] = {};\n    dividends[3].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_3').text();\n    dividends[3].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_3').text());\n    dividends[3].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_3').text();\n    dividends[3].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_3').text();\n    dividends[3].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_3').text();\n\n    dividends[4] = {};\n    dividends[4].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_4').text();\n    dividends[4].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_4').text());\n    dividends[4].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_4').text();\n    dividends[4].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_4').text();\n    dividends[4].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_4').text();\n\n    dividends[5] = {};\n    dividends[5].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_5').text();\n    dividends[5].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_5').text());\n    dividends[5].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_5').text();\n    dividends[5].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_5').text();\n    dividends[5].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_5').text();\n\n    dividends[6] = {};\n    dividends[6].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_6').text();\n    dividends[6].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_6').text());\n    dividends[6].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_6').text();\n    dividends[6].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_6').text();\n    dividends[6].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_6').text();\n\n    dividends[7] = {};\n    dividends[7].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_7').text();\n    dividends[7].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_7').text());\n    dividends[7].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_7').text();\n    dividends[7].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_7').text();\n    dividends[7].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_7').text();\n\n    dividends[8] = {};\n    dividends[8].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_8').text();\n    dividends[8].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_8').text());\n    dividends[8].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_8').text();\n    dividends[8].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_8').text();\n    dividends[8].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_8').text();\n\n\n    dividends[9] = {};\n    dividends[9].exdate = $('#quotes_content_left_dividendhistoryGrid_exdate_9').text();\n    dividends[9].amount = Number($('#quotes_content_left_dividendhistoryGrid_CashAmount_9').text());\n    dividends[9].decldate = $('#quotes_content_left_dividendhistoryGrid_DeclDate_9').text();\n    dividends[9].recdate = $('#quotes_content_left_dividendhistoryGrid_RecDate_9').text();\n    dividends[9].paydate = $('#quotes_content_left_dividendhistoryGrid_PayDate_9').text();\n\n    return dividends;\n}\n\nexport default evaluateFullDivPerformance = function (symbol) {\n    var divHistory = FS.getDividendHistory(symbol);\n    // loop through div history\n    _.each(divHistory, function (divpayout) {\n        console.log(\"Paid %d on %s\", divpayout.amount, divpayout.exdate)\n        const result = whatHappened(symbol, divpayout);\n        console.log(result);\n    });\n}\n\nexport default whatHappened = function (symbol, divpayout) {\n\n    const results = {}\n\n    results.exDivDate = divpayout.exdate;\n    results.amount = divpayout.amount;\n\n    const xdiv = moment(divpayout.exdate, \"MM/DD/YYYY\");\n    const xdiv_m0 = xdiv.format(\"MM/DD/YY\");\n    const xdiv_m1 = xdiv.businessSubtract(1).format(\"MM/DD/YY\");\n    const xdiv_m3 = xdiv.businessSubtract(3).format(\"MM/DD/YY\");\n    const xdiv_p3w = xdiv.businessAdd(22).format(\"MM/DD/YY\");\n\n    // Now let get quotes from m3d to p3w (minus 3 day to plus 3 weeks)\n\n    const quotes = FS.getHistoricalQuotes(symbol, xdiv_m3, xdiv_p3w);\n\n    results.xdiv_m1_open = quotes[xdiv_m1].open;\n    results.xdiv_m1_close = quotes[xdiv_m1].close;\n    results.before_rise = (quotes[xdiv_m1].close > quotes[xdiv_m1].open);\n\n    const phaseB_profit_price = quotes[xdiv_m1].open * 1.005;\n    results.before_profit = (quotes[xdiv_m1].high > phaseB_profit_price);\n\n    results.xdiv_m0_open = quotes[xdiv_m0].open;\n    results.xdiv_m0_close = quotes[xdiv_m0].close;\n    results.xdiv_m0_high = quotes[xdiv_m0].high;\n    results.on_rise = (quotes[xdiv_m0].close > quotes[xdiv_m0].open);\n\n    const phaseO_profit_price = (quotes[xdiv_m1].close - results.amount) * 1.005;\n    results.on_profit = (quotes[xdiv_m0].high > phaseO_profit_price);\n\n\n    const basePrice = quotes[xdiv_m1].close;\n    const bePrice = basePrice - results.amount;\n\n    const dtbe = 0;\n    const beArray = []\n    for (i = 0; i <= 21; i++) {\n        const dayToAnalyze = xdiv.businessAdd(i).format(\"MM/DD/YY\");\n        beArray.push(parseFloat(quotes[dayToAnalyze].high - bePrice).toFixed(3));  // save the delta off break even from days high\n    }\n\n    results.beArray = beArray;\n\n    // find the first index > 0 ..this is the day we had the potential to break even...\n    const gainLossArray = _.map(beArray, function (num) {\n        return (num > 0);\n    });\n\n    results.gainLossArray = gainLossArray;\n\n    return results;\n\n}\n\n\n\n","Meteor.methods({\n    'stocks.test'() {\n        console.log(\"I am here...\");\n    }\n});","import { Stocks} from './stocks';\n\nif (Meteor.isServer) {\n    // This code only runs on the server\n    Meteor.publish('stocks', function stocksPublication() {\n        return Stocks.find();\n    });\n}\n","import { Mongo } from 'meteor/mongo';\n\nexport const Stocks = new Mongo.Collection(\"stocks\");\n\n\n\n\n\n","import { SyncedCron } from 'meteor/percolate:synced-cron';\n\n// cron functions\nimport '../api/stocks/cron';\nimport '../api/quotes/cron';\n\n// methods\nimport '../api/quotes/methods';\n\n// LOAD NEW STOCKS\n\nSyncedCron.add({\n    name: 'Load any new stocks',\n    schedule: function(parser) {\n        // parser is a later.parse object\n        return parser.text('every four hours');\n    },\n    job: function() {\n        console.log(\"CRON: Loading new stocks\");\n        findNewStocks(0);\n        findNewStocks(1);\n        findNewStocks(2);\n        findNewStocks(3);\n        return 64;\n    }\n});\n\n// AUGMENT STOCKS WITH DATA\n\nSyncedCron.add({\n    name: 'Augment new stocks with data',\n    schedule: function(parser) {\n        // parser is a later.parse object\n        return parser.text('every 4 hours');\n    },\n    job: function() {\n        console.log(\"CRON: stock data augmentation\");\n        augmentStocks();\n        return 64;\n    }\n});\n\n// SCREEN STOCKS\n\nSyncedCron.add({\n    name: 'Screen stocks ',\n    schedule: function(parser) {\n        // parser is a later.parse object\n        return parser.text('every 30 minutes');\n    },\n    job: function() {\n        console.log(\"CRON: stock data screening and scoring\");\n        screenStocks();\n        return 64;\n    }\n});\n\n\n// MONITOR STOCKS\nSyncedCron.add({\n    name: 'Monitor stocks - Real Time Quotes',\n    schedule: function(parser) {\n        // parser is a later.parse object\n        return parser.text('every 60 minutes');\n    },\n    job: function() {\n        console.log(\"CRON: real time stock quotes\");\n        realtimeQuotes();\n        return 64;\n    }\n});\n\n\nSyncedCron.start();\n","import {Meteor} from 'meteor/meteor';\nvar moment = require('moment');\nvar Xray = require('x-ray');\n\nimport { Stocks } from '../imports/api/stocks/stocks';\nimport { Positions } from '../imports/api/positions/positions';\n\n// Methods\nimport '../imports/api/positions/methods.js';\nimport '../imports/api/stocks/methods.js';\n\n// Libraries\nimport '../imports/api/stocks/lib.js';\n\nimport '../imports/api/stocks/finscraper';\n\n// Publications\nimport '../imports/api/positions/publications.js';\nimport '../imports/api/stocks/publications.js';\nimport '../imports/api/quotes/publications.js';\n\n//require the Twilio module and create a REST client\nvar client = require('twilio')('AC07efeeac1388651380f7b08b02792486', '799f94a18f111a3b3762bbd19520ef7e');\n\n\nimport '../imports/startup/synced_cron_config';\n\nvar cheerio = require('cheerio');\n\n\nMeteor.startup(function () {\n\n    //result = Meteor.http.get('http://finance.yahoo.com/webservice/v1/symbols/CSCO,AAPL/quote?format=json&view=detail');\n    //var stockinfo = JSON.parse(result.content);\n    //console.log(stockinfo.list.resources[1].resource.fields.price);\n    //$ = cheerio.load(result.content);\n\n    // Test Twilio\n\n    //Send an SMS text message\n    /* client.sendMessage({\n\n        to:'+19197203889', // Any number Twilio can deliver to\n        from: '+19292654022', // A number you bought from Twilio and can use for outbound communication\n        body: 'Div Dive price alert!' // body of the SMS message\n\n    }, function(err, responseData) { //this function is executed when a response is received from Twilio\n\n        if (!err) { // \"err\" is an error received during the request, if any\n\n            // \"responseData\" is a JavaScript object containing data received from Twilio.\n            // A sample response from sending an SMS message is here (click \"JSON\" to see how the data appears in JavaScript):\n            // http://www.twilio.com/docs/api/rest/sending-sms#example-1\n\n            console.log(responseData.from); // outputs \"+14506667788\"\n            console.log(responseData.body); // outputs \"word to your mother.\"\n\n        } else {\n            console.log(err);\n        }\n    });*/\n\n\n});\n\n\n"]}